:root{
    --blanco: #ffffff;
    --oscuro: #212121;
    --primario: #ffc107;
    --secundario: #0097a7;
    --gris: #757575;
    --grisClaro: #def9f3
}
html{
    font-size: 62.5%;
    box-sizing: border-box;
    background-image: linear-gradient(to right, var(--blanco) 0%, var(--grisClaro) 100%);
    scroll-snap-type: y mandatory;/* La letra "y" hace referencia al eje y que quiere
    decir que se enfoca en el scroll vertical. Mandatory define que tan estricto se requiere
    el scroll. Otra alternativa menos estricta es proximity */
}

/* Scroll snap */
.titulo,
.servicios-heading,
.contacto-heading {
scroll-snap-align: start; /* Indica el punto en el contenedor de desplazamiento al que
debe ajustarse el contenido*/
scroll-snap-stop: always; /* Controla si el desplazamiento debe detenerse siempre en
los puntos de ajuste */
}

*::before *::after{
    box-sizing: inherit;
}
body{
    font-size: 16px;
    font-family:'krub', sans-serif;
}

.sombra{
    box-shadow: -4px 8px 46px 12px rgba(0,0,0,0.75);
-webkit-box-shadow: -4px 8px 46px 12px rgba(0,0,0,0.75);
-moz-box-shadow: -4px 8px 46px 12px rgba(0,0,0,0.75);
background-color: var(--blanco);
padding: 2rem;/*Espacion interior*/
border-radius: 2rem;/*Esquinas redondeadas*/
}
/*Tipografia*/
h1{
    font-size: 3.8rem;
}
h2{
    font-size: 2.8rem;
}
h3{
    font-size: 1.8rem;
}
h3, h2, h1{
    text-align: center;
}
/*Títulos*/
.titulo span{
    font-size: 2rem;
}
.contenedor{
    max-width:128rem;
     /*  margin-top: 0;
    margin-right: auto;
    margin-bottom: 0;
    margin-left: auto;*/
    margin: 0 auto; /*igual podria ser 0 auto 0 auto*/
}
.nav-bag{
    background-color: var(--secundario);
}
.navegacion-Principal{
    display: flex;  /*Contenido flexible*/
    flex-direction: column; /*Contenido dividido por columnas*/
    /*El justify-content es para las filas (row) y aling-items es para columnas (column) */
    justify-content: space-between; /*Horizontalmente espacio entre componentes*/
    font-weight: bold; /*Negritas*/
    font-size: 2rem; /*Tamaño de letra*/
    text-align: center; /*Alinear al centro*/

}
.navegacion-Principal a{
    padding: 1rem;
    text-decoration: none;
    color: var(--blanco);
}
.navegacion-Principal a:hover{
    background-color: var(--primario);
    color: var(--oscuro);
}
@media (min-width: 768px) {
    .navegacion-Principal{
        flex-direction: row;
        justify-content: space-between;
        background-color: #0097a7;
    }
}

/*hero*/
.hero {
    background-image: url(../img/MicrosoftTeams-image.png); /*Imagen de fondo*/
    background-repeat: no-repeat; /*Para que no se repita la imagen*/
    background-size: cover; /*para que cubra todo el tamaño de la pantalla*/
    height: 450px; /*Altura*/
    position: relative; /*El padre debe ser el relativo*/
    margin-bottom: 2rem; /*Margen inferior para separar el contenido*/ 
}
.contenido-hero{
    position: absolute;/* el hijo debe ser el absoluto*/
    background-color: rgba(0,0,0,.7);
    width: 100%;
    height: 100%;
    /*Para alinear vertical y horizontalmente */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}
.contenido-hero h2, .contenido-hero p{
    color: var(--blanco);
}
.ubicacion{
    display: flex;
    align-items:flex-end;
}
.boton{
    background-color: var(--secundario);/*Fondo del boton*/
    text-decoration: none; /*Para quitar la barra de abajo de la letra*/
    padding: 1rem 3rem;/*margenes internos*/
    border-radius: 0.5rem;/*esquinas redondeadas*/
    color: var(--blanco);/*el color de la letras*/
    margin-top: 3rem;/*margen hacia arriba*/
    font-weight: bold;/*los negritas*/
    font-size: 2rem;/*tamaño de la letra*/
    text-transform: uppercase;/*poner todo en mayusculas*/
    text-align: center;/*Centrar el texto*/
    width: 90%;/*ancho del boton que agarre un 90% si la pantalla es pequeña*/
    border: none;/*Esto solo va a modificar a la etiquta input ya que en los demas si no existe lo ignora*/
}
@media (min-width: 768px) {
    .boton{
        width: auto;
    }
    .boton :hover{
        cursor: pointer;
    }
}

@media (min-width: 768px) {
    .Servicios{
        display: grid;
        /*grid-template-columns: 1fr 1fr 1fr;    es para fraccionarlo */
        grid-template-columns: repeat(3, 1fr);/* La propiedad define el área de las
        columnas y la función repeat() repite 3 veces 1 fracción en el grid, también se puede
        poner 1fr 1fr 1fr o 33.3% 33.3% 33.3% */
        column-gap: 1rem;/*Distancia entre columnas*/
    }
}

/*Servicios*/
.servicio{
    display: flex;
    flex-direction: column;
    align-items: center;
}
.servicio h3{
    color: var(--secundario);
    font-weight: normal;
}
.servicio p{
    line-height: 2;/*interlineado*/
    text-align: center;
}
.servicio .iconos{
    height: 15rem;
    width: 15rem;
    background-color: var(--primario);
    border-radius: 50%;/*Border redondeados*/
    display: flex;
    justify-content: center;
    align-items: center;
}

/*Contacto*/
.formulario {
    background-color: var(--gris);
    width: min(60rem, 100%); /* Ahorra media querys. ¿Qué es más pequeño, 60rem o el
    100% del tamaño de la pantalla? Ejemplo: Sí tengo un dispositivo móvil con 488px de
    ancho, es más pequeño el 100%, por lo que tomará ese valor y no los 60 rem. Caso
    contrario, tengo una tablet con 768px, ahí sí es menor 60 rem, por lo que se tomará ese
    valor */
    margin: 0 auto;
    /* Usarlo si el padre no es un display flex (siendo así se usaría el justify-content,
    el formulario tiene block por defaulf */
    padding: 2rem;
    border-radius: 1rem;
    }
    .formulario fieldset {
    border: none;
    }
    .formulario legend {
    text-align: center;
    font-size: 1.8rem;
    font-weight: bold;
    margin-bottom: 2rem;
    text-transform: uppercase;
    color: var(--primario);
}
@media (min-width: 768px) {
    .contenedor-campos{
    display: grid;
    grid-template-columns: repeat(2,1fr);
    column-gap: 1rem;
    grid-template-rows: auto auto 20rem; /* Darle el espacio de cada fila*/
    }
    /* También se podría crear la clase de ayuda campo-correo para llamar el selector,
    pero se recomienda no crear nuevas clases si no es estrictamente necesario.
    nth-child significa el # del hijo. El orden sería: nombre, teléfono, correo, mensaje.
    Como requerimos modificar correo y mensaje, usaremos 3 y 4 en nth-child */
    .campo:nth-child(3),
    .campo:nth-child(4){
    grid-column: 1/3; /* Para posicionar el elemento, "que vaya de la columna 1 a la
    3*/
    }
    }
.campo label{
        color: var(--blanco);
        font-weight: bold;
        margin-bottom: .5rem;
        display: block; /* Logra que cada label tome todo el espacio disponible y estar
        separado del input */
        }
        .input-text{
        width: 100%;
        border: none;
        padding: 1.5rem;
        border-radius: .5rem;
        }
    .campo textarea {
     height: 20rem; /* Hacer más grande la altura del textarea*/
    }

    /* Utilidades */
    .w-sm-100{
    width: 100%;
    }
    @media (min-width: 768px) {
    .w-sm-100{
    width: auto;
    }
    }
    .flex{
    display: flex;
    }
    .alinear-derecha{
        justify-content: flex-end;
    }

.footer{
    text-align: center;/*Para alinear el texto*/
}